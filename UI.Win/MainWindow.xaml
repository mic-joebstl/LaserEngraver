<Window x:Class="LaserPathEngraver.UI.Win.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LaserPathEngraver.UI.Win"
        xmlns:controls="clr-namespace:LaserPathEngraver.UI.Win.Controls"
        xmlns:converters="clr-namespace:LaserPathEngraver.UI.Win.Converters"
        xmlns:rules="clr-namespace:LaserPathEngraver.UI.Win.Rules"
        xmlns:localization="clr-namespace:LaserPathEngraver.UI.Win.Resources.Localization"
        Title="{x:Static localization:Texts.Title}" Height="640" Width="1337"
        Background="{Binding Theme.CanvasBackground}"
        Foreground="{Binding Theme.Foreground}"
        FontFamily="#Open Sans Light"
        WindowState="Maximized"
        KeyDown="ContentControl_KeyDown"
        KeyUp="ContentControl_KeyUp"
        Loaded="Window_Loaded"
        Icon="/Resources/Icons/icon.ico">
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Styles.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<converters:LogScaleConverter x:Key="LogScaleConverter" />
			<converters:ByteScaleConverter x:Key="ByteScaleConverter" MinValue="0" MaxValue="100" />
			<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		</ResourceDictionary>
	</Window.Resources>
	<Grid>

		<ContentControl Content="{Binding Space.Canvas}"
		                Name="_Content"
		                Effect="{Binding DropShadowEffect}"
		                HorizontalAlignment="Stretch"
		                VerticalAlignment="Stretch"
		                HorizontalContentAlignment="Stretch"
		                VerticalContentAlignment="Stretch"
		                ClipToBounds="True"
		                AllowDrop="True"
		                DragOver="ContentControl_DragOver"
		                Drop="ContentControl_Drop"
		                Cursor="{Binding CanvasCursor}"
		                local:SizeObserver.Observe="True"
		                local:SizeObserver.ObservedWidth="{Binding Space.ObservableWidth, Mode=OneWayToSource}"
		                local:SizeObserver.ObservedHeight="{Binding Space.ObservableHeight, Mode=OneWayToSource}">
		</ContentControl>

		<Grid VerticalAlignment="Top" HorizontalAlignment="Left"
		      Margin="15">

			<Border Background="{Binding Theme.SectionBackground}" CornerRadius="5">
				<Border Opacity="0.8"
				        Margin="-5">
					<Border.Effect>
						<BlurEffect Radius="5" />
					</Border.Effect>
					<Border.Background>
						<VisualBrush Visual="{Binding ElementName=_Content}"
						             Stretch="None"
						             AlignmentX="Left" AlignmentY="Top" 
						             ViewboxUnits="Absolute" Viewbox="10,10,1024,1024" />
					</Border.Background>
				</Border>
			</Border>

			<ScrollViewer MinWidth="316">
				<StackPanel Orientation="Vertical"
				            Opacity="0.8"
				            HorizontalAlignment="Left"
				            ClipToBounds="False"
				            Margin="15,15,15,30">

					<Label FontSize="20"
					       Margin="0,0,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.EngravingTitle}" />

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.EngravingDuration"
								         UpdateSourceTrigger="LostFocus"
								         StringFormat="N0"
								         Converter="{StaticResource ByteScaleConverter}">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="100" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.EngravingDurationText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<Slider Minimum="0"
					        Maximum="100"
					        Width="200"
					        TickFrequency="1"
					        Value="{Binding Path=Space.EngravingDuration, Converter={StaticResource ByteScaleConverter}}"
					        HorizontalAlignment="Left"
					        IsEnabled="{Binding IsEditable, Mode=OneWay}" />

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.EngravingPower"
								         UpdateSourceTrigger="LostFocus"
								         StringFormat="N0"
								         Converter="{StaticResource ByteScaleConverter}">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="100" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.MaximumEngravingPowerText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<Label.Style>
								<Style TargetType="{x:Type Label}">
									<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=Foreground}" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="True">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger.Setters>
										</DataTrigger>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="False">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger.Setters>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneTime}" Value="True">
											<Setter Property="Opacity" Value="1" />
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneTime}" Value="False">
											<Setter Property="Opacity" Value="0.4" />
										</DataTrigger>
										<Trigger Property="IsEnabled" Value="True">
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="1"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>
											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="0.4"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>
										</Trigger>
										<Trigger Property="IsEnabled" Value="False">
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="0.4"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>
											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="1"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>
										</Trigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.EngravingPowerText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<Label.Style>
								<Style TargetType="{x:Type Label}">
									<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=Foreground}" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="True">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger.Setters>
										</DataTrigger>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="False">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger.Setters>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneTime}" Value="True">
											<Setter Property="Opacity" Value="1" />
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneTime}" Value="False">
											<Setter Property="Opacity" Value="0.4" />
										</DataTrigger>
										<Trigger Property="IsEnabled" Value="True">
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="1"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>
											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="0.4"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>
										</Trigger>
										<Trigger Property="IsEnabled" Value="False">
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="0.4"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>
											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation Storyboard.TargetProperty="Opacity"
														                 To="1"
														                 Duration="0:0:0.4"
														                 AccelerationRatio="0.1"
														                 DecelerationRatio="0.9" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>
										</Trigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
					</StackPanel>

					<Slider Minimum="0"
					        Maximum="100"
					        Width="200"
					        TickFrequency="1"
					        Value="{Binding Path=Space.EngravingPower, Converter={StaticResource ByteScaleConverter}}"
					        HorizontalAlignment="Left"
					        IsEnabled="{Binding IsEditable, Mode=OneWay}" />

					<StackPanel Orientation="Vertical">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="False">
										<DataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Height"
													                 To="60"
													                 Duration="0:0:0.2"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity"
													                 To="1"
													                 Duration="0:0:0.4"
													                 BeginTime="0:0:0.15"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.EnterActions>
										<DataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Height"
													                 To="0"
													                 Duration="0:0:0.2"
													                 BeginTime="0:0:0.15"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity"
													                 To="0"
													                 Duration="0:0:0.4"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.ExitActions>
									</DataTrigger>
									<DataTrigger Binding="{Binding Space.IsPowerVarible, Mode=OneTime}" Value="False">
										<Setter Property="Height" Value="60" />
										<Setter Property="Opacity" Value="1" />
									</DataTrigger>
									<DataTrigger Binding="{Binding Space.IsPowerVarible, Mode=OneTime}" Value="True">
										<Setter Property="Height" Value="0" />
										<Setter Property="Opacity" Value="0" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<StackPanel Orientation="Horizontal"
						            Margin="0,7.5,0,7.5">
							<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
								<TextBox.Text>
									<Binding Path="Space.FixedPowerThreshold"
									         UpdateSourceTrigger="LostFocus"
									         StringFormat="N0"
									         Converter="{StaticResource ByteScaleConverter}">
										<Binding.ValidationRules>
											<rules:DoubleValidationRule Minimum="1" Maximum="100" />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
							<Label FontSize="16"
							       Content="{x:Static localization:Texts.FixedEngravingPowerThresholdText}"
							       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
						</StackPanel>

						<Slider Minimum="0"
						        Maximum="100"
						        Width="200"
						        TickFrequency="1"
						        Value="{Binding Path=Space.FixedPowerThreshold, Converter={StaticResource ByteScaleConverter}}"
						        HorizontalAlignment="Left"
						        IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding Space.IsPowerVarible}"
					          Content="{x:Static localization:Texts.IsPowerVariableText}"
					          IsEnabled="{Binding IsEditable, Mode=OneWay}" />

					<Label FontSize="16"
					       Margin="0,12.5,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.PlottingModeTitle}"
					       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					<Grid HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
						</Grid.ColumnDefinitions>

						<CheckBox Grid.Column="0"
						          IsChecked="{Binding Space.IsPlottingModeRasterizedEnabled}"
						          Content="{x:Static localization:Texts.PlottingModeRasterizedText}"
						          IsEnabled="{Binding IsEditable, Mode=OneWay}" />
						<CheckBox Grid.Column="1"
						          IsChecked="{Binding Space.IsPlottingModePathEnabled}"
						          Content="{x:Static localization:Texts.PlottingModePathText}"
						          IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</Grid>


					<Label FontSize="20"
					       Margin="0,30,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.ViewTitle}" />
					
					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.ScalePercent"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="1000" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.ScaleText}" />
					</StackPanel>

					<Slider Minimum="1"
					        Maximum="3"
					        Width="200"
					        Value="{Binding Path=Space.ScalePercent, Converter={StaticResource LogScaleConverter}}"
					        HorizontalAlignment="Left" />

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding EnableVisualEffects}"
					          Content="{x:Static localization:Texts.EnableVisualEffectsText}" />

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding Space.AutoCenterView}"
					          Content="{x:Static localization:Texts.AutoCenterViewText}" />

					<Label FontSize="16"
					       Margin="0,12.5,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.ThemeText}" />
					<Grid HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
						</Grid.ColumnDefinitions>

						<CheckBox Grid.Column="0"
						          Margin="0"
						          IsChecked="{Binding ShowDarkTheme}"
						          Content="{x:Static localization:Texts.DarkThemeText}" />
						<CheckBox Grid.Column="1"
						          Margin="0"
						          IsChecked="{Binding ShowLightTheme}"
						          Content="{x:Static localization:Texts.LightThemeText}" />
						<CheckBox Grid.Column="2"
						          Margin="0"
						          Visibility="{Binding HasCustomTheme, Converter={StaticResource BoolToVisibilityConverter}}"
						          IsChecked="{Binding ShowCustomTheme}"
						          Content="{x:Static localization:Texts.CustomThemeText}" />
					</Grid>

					<Label FontSize="16"
					       Margin="0,12.5,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.UnitText}" />
					<Grid HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
						</Grid.ColumnDefinitions>

						<CheckBox Grid.Column="0"
						          Margin="0"
						          IsChecked="{Binding ShowUnitCm}"
						          Content="{x:Static localization:Texts.UnitCmText}" />
						<CheckBox Grid.Column="1"
						          Margin="0"
						          IsChecked="{Binding ShowUnitPx}"
						          Content="{x:Static localization:Texts.UnitPxText}" />
						<CheckBox Grid.Column="2"
						          Margin="0"
						          IsChecked="{Binding ShowUnitIn}"
						          Content="{x:Static localization:Texts.UnitInText}" />
					</Grid>


					<Label FontSize="20"
					       Margin="0,30,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.ImageTitle}" />

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.ImageWidthDot"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="1440" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.WidthPxText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.ImageWidthCm"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="1440" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.WidthCmText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitIn}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitIn}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.ImageWidthIn"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="12" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.WidthInText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,0">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.ImageHeightDot"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="30" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.HeightPxText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,0">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.ImageHeightCm"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="30" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.HeightCmText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,0">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitIn}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitIn}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30" IsEnabled="{Binding IsEditable, Mode=OneWay}">
							<TextBox.Text>
								<Binding Path="Space.ImageHeightIn"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<rules:DoubleValidationRule Minimum="1" Maximum="12" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label FontSize="16"
						       Content="{x:Static localization:Texts.HeightInText}"
						       IsEnabled="{Binding IsEditable, Mode=OneWay}" />
					</StackPanel>

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding Space.PreserveAspectRatio}"
					          Content="{x:Static localization:Texts.PreserveAspectRatioText}"
					          IsEnabled="{Binding IsEditable, Mode=OneWay}" />

				</StackPanel>
			</ScrollViewer>

		</Grid>
		<Grid VerticalAlignment="Top" HorizontalAlignment="Right"
		      Margin="15">

			<Border Background="{Binding Theme.SectionBackground}" CornerRadius="5">
				<Border Opacity="0.8"
				        Margin="-5">
					<Border.Effect>
						<BlurEffect Radius="5" />
					</Border.Effect>
					<Border.Background>
						<VisualBrush Visual="{Binding ElementName=_Content}"
						             Stretch="None"
						             AlignmentX="Left" AlignmentY="Top"
						             ViewboxUnits="Absolute"
						             Viewbox="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActionsViewBox}" />
					</Border.Background>
				</Border>
			</Border>

			<ScrollViewer Name="_ActionsViewBox"
			              MinWidth="316">
				<StackPanel Orientation="Vertical"
				            Opacity="0.8"
				            ClipToBounds="False"
				            Margin="15,15,15,30">

					<Label FontSize="20"
					       Margin="0,0,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.StatusTitle}" />

					<StackPanel Orientation="Vertical" Margin="0,5,5,5">
						<Label Content="{x:Static localization:Texts.UpdateRateTitle}"
						       FontSize="14"
						       Padding="0" />
						<Label Content="{Binding Space.RenderRate}"
						       ContentStringFormat="{x:Static localization:Texts.RenderRateFormatText}"
						       FontSize="16"
						       FontWeight="Bold"
						       Padding="0"
						       Margin="-5,0,5,0" />
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="0,5,5,5">
						<Label Content="{x:Static localization:Texts.DeviceStatusTitle}"
						       FontSize="14"
						       Padding="0" />
						<Label Content="{Binding DeviceStatusText}"
						       FontSize="16"
						       FontWeight="Bold"
						       Padding="0" />
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="0,5,5,5">
						<Label Content="{x:Static localization:Texts.JobStatusTitle}"
						       FontSize="14"
						       Padding="0" />
						<Label Content="{Binding JobStatusText}"
						       FontSize="16"
						       FontWeight="Bold"
						       Padding="0" />
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="0,5,5,5">
						<Label Content="{x:Static localization:Texts.JobElapsedDurationTitle}"
						       FontSize="14"
						       Padding="0" />
						<Label Content="{Binding JobElapsedDuration}"
						       ContentStringFormat="{x:Static localization:Texts.JobElapsedDurationFormatText}"
						       FontSize="16"
						       FontWeight="Bold"
						       Padding="0"
						       Margin="-5,0,5,0" />
					</StackPanel>


					<Label FontSize="20"
					       Margin="0,30,0,0"
					       Padding="0,5,5,5"
					       Content="{x:Static localization:Texts.ActionsTitle}" />

					<Button Margin="0,12.5,0,0"
					        Command="{Binding ConnectCommand}"
					        Content="{Binding ConnectCommandText}" />
					
					<Button Margin="0,12.5,0,0"
					        Command="{Binding FramingCommand}"
					        Content="{x:Static localization:Texts.FramingCommandText}" />

					<Button Margin="0,12.5,0,0"
					        Command="{Binding StartCommand}"
					        Content="{Binding StartCommandText}" />

					<Button Margin="0,12.5,0,0"
					        Command="{Binding CancelCommand}"
					        Content="{x:Static localization:Texts.CancelCommandText}" />

					<controls:ContentChangeTextBlock
						FontSize="16"
						Foreground="#FCC8C3"
						Padding="0,30,0,0"
						Opacity="0"
						MaxHeight="0"
						Height="Auto"
						MaxWidth="300"
						TextWrapping="Wrap"
						Text="{Binding ErrorMessage}">
						<controls:ContentChangeTextBlock.Triggers>
							<EventTrigger RoutedEvent="controls:ContentChangeTextBlock.ContentChanged">
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="MaxHeight"
										                To="200"
										                Duration="0:0:0.4"
										                AccelerationRatio="0.1"
										                DecelerationRatio="0.9" />
										<DoubleAnimation Storyboard.TargetProperty="Opacity"
										                To="1"
										                Duration="0:0:0.4"
										                BeginTime="0:0:0.15"
										                AccelerationRatio="0.1"
										                DecelerationRatio="0.9" />

										<DoubleAnimation Storyboard.TargetProperty="MaxHeight"
										                To="0"
										                Duration="0:0:0.4"
										                BeginTime="0:0:5.15"
										                AccelerationRatio="0.1"
										                DecelerationRatio="0.9" />
										<DoubleAnimation Storyboard.TargetProperty="Opacity"
										                To="0"
										                Duration="0:0:0.4"
										                BeginTime="0:0:5"
										                AccelerationRatio="0.1"
										                DecelerationRatio="0.9" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</controls:ContentChangeTextBlock.Triggers>
					</controls:ContentChangeTextBlock>

				</StackPanel>
			</ScrollViewer>

		</Grid>
		<Grid HorizontalAlignment="Right" VerticalAlignment="Bottom"
		      Margin="15">

			<Border Background="{Binding Theme.SectionBackground}" CornerRadius="5">
				<Border Opacity="0.8"
					    Margin="-5">
					<Border.Effect>
						<BlurEffect Radius="5" />
					</Border.Effect>
					<Border.Background>
						<VisualBrush Visual="{Binding ElementName=_Content}"
						             Stretch="None"
						             AlignmentX="Left" AlignmentY="Top"
						             ViewboxUnits="Absolute"
						             Viewbox="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=TutorialViewBox}" />
					</Border.Background>
				</Border>
			</Border>

			<StackPanel Orientation="Vertical"
			            Name="_TutorialBox">
				<ScrollViewer>
					<ScrollViewer.Style>
						<Style TargetType="{x:Type ScrollViewer}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ShowHelp}" Value="True">
									<DataTrigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Height"
												                 To="300"
												                 Duration="0:0:0.4"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Opacity"
												                 To="1"
												                 Duration="0:0:0.4"
												                 BeginTime="0:0:0.15"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
									</DataTrigger.EnterActions>
									<DataTrigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Height"
												                 To="0"
												                 Duration="0:0:0.4"
												                 BeginTime="0:0:0.15"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Opacity"
												                 To="0"
												                 Duration="0:0:0.4"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
									</DataTrigger.ExitActions>
								</DataTrigger>
								<DataTrigger Binding="{Binding ShowHelp, Mode=OneTime}" Value="True">
									<Setter Property="Height" Value="300" />
									<Setter Property="Opacity" Value="1" />
								</DataTrigger>
								<DataTrigger Binding="{Binding ShowHelp, Mode=OneTime}" Value="False">
									<Setter Property="Height" Value="0" />
									<Setter Property="Opacity" Value="0" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</ScrollViewer.Style>
					<TextBlock Width="300"
					           localization:TextBlockHelper.FormattedText="{x:Static localization:Texts.HelpText}">
					</TextBlock>
				</ScrollViewer>

				<CheckBox Margin="5,5,5,5"
				          IsChecked="{Binding ShowHelp}"
				          Content="{x:Static localization:Texts.ShowHelpText}" />

			</StackPanel>

		</Grid>
	</Grid>
</Window>

