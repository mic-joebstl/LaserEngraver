<Window x:Class="LaserPathEngraver.UI.Win.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LaserPathEngraver.UI.Win"
        xmlns:local.converters="clr-namespace:LaserPathEngraver.UI.Win.Converters"
        xmlns:local.rules="clr-namespace:LaserPathEngraver.UI.Win.Rules"
        xmlns:localization="clr-namespace:LaserPathEngraver.UI.Win.Resources.Localization"
        Title="{x:Static localization:Texts.Title}" Height="640" Width="1337"
        Background="#111"
        Foreground="White"
        FontFamily="#Open Sans Light"
        WindowState="Maximized"
        KeyDown="ContentControl_KeyDown"
        KeyUp="ContentControl_KeyUp"
        Icon="/Resources/Icons/icon.ico"
        xml:lang="en">
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Styles.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<local.converters:LogScaleConverter x:Key="LogScaleConverter" />
			<local.converters:ByteScaleConverter x:Key="ByteScaleConverter" MinValue="0" MaxValue="100" />
		</ResourceDictionary>
	</Window.Resources>
	<Grid>

		<ContentControl Content="{Binding Space.Canvas}"
		                Name="_Content"
		                Effect="{Binding DropShadowEffect}"
		                HorizontalAlignment="Stretch"
		                VerticalAlignment="Stretch"
		                HorizontalContentAlignment="Stretch"
		                VerticalContentAlignment="Stretch"
		                ClipToBounds="True"
		                AllowDrop="True"
		                DragOver="ContentControl_DragOver"
		                Drop="ContentControl_Drop"
		                local:SizeObserver.Observe="True"
		                local:SizeObserver.ObservedWidth="{Binding Space.ObservableWidth, Mode=OneWayToSource}"
		                local:SizeObserver.ObservedHeight="{Binding Space.ObservableHeight, Mode=OneWayToSource}">
		</ContentControl>
		<Grid VerticalAlignment="Top" HorizontalAlignment="Left"
		      Margin="15">

			<Border Background="Black">
				<Border Opacity="0.8"
				        Margin="-5">
					<Border.Effect>
						<BlurEffect Radius="5" />
					</Border.Effect>
					<Border.Background>
						<VisualBrush Visual="{Binding ElementName=_Content}"
						             Stretch="None"
						             AlignmentX="Left" AlignmentY="Top" 
						             ViewboxUnits="Absolute" Viewbox="10,10,1024,1024" />
					</Border.Background>
				</Border>
			</Border>

			<ScrollViewer MinWidth="316">
				<StackPanel Orientation="Vertical"
				            Opacity="0.8"
				            ClipToBounds="False"
				            Margin="15,15,15,30">

					<Label FontSize="20"
					       Foreground="White"
					       Margin="0,0,0,0"
					       Content="{x:Static localization:Texts.EngravingTitle}" />

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.EngravingDuration"
								         UpdateSourceTrigger="LostFocus"
								         StringFormat="N0"
								         Converter="{StaticResource ByteScaleConverter}">
									<Binding.ValidationRules>
										<local.rules:DoubleValidationRule Minimum="1" Maximum="100" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.EngravingDurationText}" />
					</StackPanel>

					<Slider Minimum="0"
					        Maximum="100"
					        Width="200"
					        TickFrequency="1"
					        Value="{Binding Path=Space.EngravingDuration, Converter={StaticResource ByteScaleConverter}}"
					        HorizontalAlignment="Left" />

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.EngravingPower"
								         UpdateSourceTrigger="LostFocus"
								         StringFormat="N0"
								         Converter="{StaticResource ByteScaleConverter}">
									<Binding.ValidationRules>
										<local.rules:DoubleValidationRule Minimum="1" Maximum="100" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.MaximumEngravingPowerText}">
							<Label.Style>
								<Style TargetType="{x:Type Label}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="True">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger.Setters>
										</DataTrigger>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="False">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger.Setters>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.EngravingPowerText}">
							<Label.Style>
								<Style TargetType="{x:Type Label}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="True">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger.Setters>
										</DataTrigger>
										<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="False">
											<DataTrigger.Setters>
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger.Setters>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
					</StackPanel>

					<Slider Minimum="0"
					        Maximum="100"
					        Width="200"
					        TickFrequency="1"
					        Value="{Binding Path=Space.EngravingPower, Converter={StaticResource ByteScaleConverter}}"
					        HorizontalAlignment="Left" />

					<StackPanel Orientation="Vertical">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding Space.IsPowerVarible}" Value="False">
										<DataTrigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Height"
													                 To="60"
													                 Duration="0:0:0.2"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity"
													                 To="1"
													                 Duration="0:0:0.4"
													                 BeginTime="0:0:0.15"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.EnterActions>
										<DataTrigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Height"
													                 To="0"
													                 Duration="0:0:0.2"
													                 BeginTime="0:0:0.15"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty="Opacity"
													                 To="0"
													                 Duration="0:0:0.4"
													                 AccelerationRatio="0.1"
													                 DecelerationRatio="0.9"/>
												</Storyboard>
											</BeginStoryboard>
										</DataTrigger.ExitActions>
									</DataTrigger>
									<DataTrigger Binding="{Binding Space.IsPowerVarible, Mode=OneTime}" Value="False">
										<Setter Property="Height" Value="60" />
										<Setter Property="Opacity" Value="1" />
									</DataTrigger>
									<DataTrigger Binding="{Binding Space.IsPowerVarible, Mode=OneTime}" Value="True">
										<Setter Property="Height" Value="0" />
										<Setter Property="Opacity" Value="0" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<StackPanel Orientation="Horizontal"
						            Margin="0,7.5,0,7.5">
							<TextBox Width="70" Height="30">
								<TextBox.Text>
									<Binding Path="Space.FixedPowerThreshold"
									         UpdateSourceTrigger="LostFocus"
									         StringFormat="N0"
									         Converter="{StaticResource ByteScaleConverter}">
										<Binding.ValidationRules>
											<local.rules:DoubleValidationRule Minimum="1" Maximum="100" />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
							<Label Foreground="White"
							       FontSize="16"
							       Content="{x:Static localization:Texts.FixedEngravingPowerThresholdText}" />
						</StackPanel>

						<Slider Minimum="0"
						        Maximum="100"
						        Width="200"
						        TickFrequency="1"
						        Value="{Binding Path=Space.FixedPowerThreshold, Converter={StaticResource ByteScaleConverter}}"
						        HorizontalAlignment="Left" />
					</StackPanel>

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding Space.IsPowerVarible}"
					          Content="{x:Static localization:Texts.IsPowerVariableText}" />

					<StackPanel Orientation="Vertical">
						<Label FontSize="16"
						       Foreground="White"
						       Margin="-5,12.5,0,0"
						       Content="{x:Static localization:Texts.PlottingModeTitle}" />
						<CheckBox Margin="12.5,5,0,0"
						          IsChecked="{Binding Space.IsPlottingModeRasterizedEnabled}"
						          Content="{x:Static localization:Texts.PlottingModeRasterizedText}" />
						<CheckBox Margin="12.5,12.5,0,0"
						          IsChecked="{Binding Space.IsPlottingModePathEnabled}"
						          Content="{x:Static localization:Texts.PlottingModePathText}" />
					</StackPanel>
					

					<Label FontSize="20"
					       Foreground="White"
					       Margin="0,30,0,0"
					       Content="{x:Static localization:Texts.ViewTitle}" />
					
					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.ScalePercent"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<local.rules:DoubleValidationRule Minimum="1" Maximum="1000" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.ScaleText}" />
					</StackPanel>

					<Slider Minimum="1"
					        Maximum="3"
					        Width="200"
					        Value="{Binding Path=Space.ScalePercent, Converter={StaticResource LogScaleConverter}}"
					        HorizontalAlignment="Left" />

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding EnableVisualEffects}"
					          Content="{x:Static localization:Texts.EnableVisualEffectsText}" />

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding Space.AutoCenterView}"
					          Content="{x:Static localization:Texts.AutoCenterViewText}" />

					<StackPanel Orientation="Horizontal">
						<Label FontSize="16"
						       Foreground="White"
						       Margin="-5,12.5,25,0"
						       Content="{x:Static localization:Texts.UnitText}" />
						<CheckBox Margin="0,12.5,25,0"
						          IsChecked="{Binding ShowUnitCm}"
						          Content="{x:Static localization:Texts.UnitCmText}" />
						<CheckBox Margin="0,12.5,0,0"
						          IsChecked="{Binding ShowUnitPx}"
						          Content="{x:Static localization:Texts.UnitPxText}" />
					</StackPanel>

					<Label FontSize="20"
					       Foreground="White"
					       Margin="0,30,0,0"
					       Content="{x:Static localization:Texts.ImageTitle}" />

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.ImageWidthDot"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<local.rules:DoubleValidationRule Minimum="1" Maximum="1440" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.WidthPxText}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,7.5">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.ImageWidthCm"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<local.rules:DoubleValidationRule Minimum="1" Maximum="1440" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.WidthCmText}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,0">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitPx}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.ImageHeightDot"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<local.rules:DoubleValidationRule Minimum="1" Maximum="30" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.HeightPxText}" />
					</StackPanel>

					<StackPanel Orientation="Horizontal"
					            Margin="0,7.5,0,0">
						<StackPanel.Style>
							<Style TargetType="{x:Type StackPanel}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="True">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger.Setters>
									</DataTrigger>
									<DataTrigger Binding="{Binding ShowUnitCm}" Value="False">
										<DataTrigger.Setters>
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger.Setters>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBox Width="70" Height="30">
							<TextBox.Text>
								<Binding Path="Space.ImageHeightCm"
								         UpdateSourceTrigger="PropertyChanged"
								         StringFormat="N2">
									<Binding.ValidationRules>
										<local.rules:DoubleValidationRule Minimum="1" Maximum="30" />
									</Binding.ValidationRules>
								</Binding>
							</TextBox.Text>
						</TextBox>
						<Label Foreground="White"
						       FontSize="16"
						       Content="{x:Static localization:Texts.HeightCmText}" />
					</StackPanel>

					<CheckBox Margin="0,12.5,0,0"
					          IsChecked="{Binding Space.PreserveAspectRatio}"
					          Content="{x:Static localization:Texts.PreserveAspectRatioText}" />

				</StackPanel>
			</ScrollViewer>

		</Grid>
		<Grid VerticalAlignment="Top" HorizontalAlignment="Right"
		      Margin="15">

			<Border Background="Black">
				<Border Opacity="0.8"
				        Margin="-5">
					<Border.Effect>
						<BlurEffect Radius="5" />
					</Border.Effect>
					<Border.Background>
						<VisualBrush Visual="{Binding ElementName=_Content}"
						             Stretch="None"
						             AlignmentX="Left" AlignmentY="Top"
						             ViewboxUnits="Absolute"
						             Viewbox="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActionsViewBox}" />
					</Border.Background>
				</Border>
			</Border>

			<ScrollViewer Name="_ActionsViewBox"
			              MinWidth="316">
				<StackPanel Orientation="Vertical"
				            Opacity="0.8"
				            ClipToBounds="False"
				            Margin="15,15,15,30">

					<Label FontSize="20"
					       Foreground="White"
					       Margin="0,0,0,0"
					       Content="{x:Static localization:Texts.StatusTitle}" />

					<Label Content="{Binding Space.RenderRate}"
					       Foreground="White"
					       FontSize="16"
					       ContentStringFormat="{x:Static localization:Texts.RenderRateFormatText}" />

					
					<Label FontSize="20"
					       Foreground="White"
					       Margin="0,30,0,0"
					       Content="{x:Static localization:Texts.ActionsTitle}" />

					<Button Margin="0,12.5,0,0"
					        Content="{x:Static localization:Texts.ConnectButtonText}" />
				</StackPanel>
			</ScrollViewer>

		</Grid>
		<Grid HorizontalAlignment="Right" VerticalAlignment="Bottom"
		      Margin="15">

			<Border Background="Black">
				<Border Opacity="0.8"
					    Margin="-5">
					<Border.Effect>
						<BlurEffect Radius="5" />
					</Border.Effect>
					<Border.Background>
						<VisualBrush Visual="{Binding ElementName=_Content}"
						             Stretch="None"
						             AlignmentX="Left" AlignmentY="Top"
						             ViewboxUnits="Absolute"
						             Viewbox="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=TutorialViewBox}" />
					</Border.Background>
				</Border>
			</Border>

			<StackPanel Orientation="Vertical"
			            Name="_TutorialBox">
				<ScrollViewer>
					<ScrollViewer.Style>
						<Style TargetType="{x:Type ScrollViewer}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding ShowHelp}" Value="True">
									<DataTrigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Height"
												                 To="300"
												                 Duration="0:0:0.4"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Opacity"
												                 To="1"
												                 Duration="0:0:0.4"
												                 BeginTime="0:0:0.15"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
									</DataTrigger.EnterActions>
									<DataTrigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Height"
												                 To="0"
												                 Duration="0:0:0.4"
												                 BeginTime="0:0:0.15"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Opacity"
												                 To="0"
												                 Duration="0:0:0.4"
												                 AccelerationRatio="0.1"
												                 DecelerationRatio="0.9" />
											</Storyboard>
										</BeginStoryboard>
									</DataTrigger.ExitActions>
								</DataTrigger>
								<DataTrigger Binding="{Binding ShowHelp, Mode=OneTime}" Value="True">
									<Setter Property="Height" Value="300" />
									<Setter Property="Opacity" Value="1" />
								</DataTrigger>
								<DataTrigger Binding="{Binding ShowHelp, Mode=OneTime}" Value="False">
									<Setter Property="Height" Value="0" />
									<Setter Property="Opacity" Value="0" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</ScrollViewer.Style>
					<TextBlock Foreground="White"
					           Width="300"
					           localization:TextBlockHelper.FormattedText="{x:Static localization:Texts.HelpText}">
					</TextBlock>
				</ScrollViewer>

				<CheckBox Margin="5,5,5,5"
					      IsChecked="{Binding ShowHelp}"
					      Content="{x:Static localization:Texts.ShowHelpText}" />
			</StackPanel>

		</Grid>
	</Grid>
</Window>

